[package]
name = "neo-contract"
authors = ["R3E Network <jimmy@r3e.network>"]
readme = "README.md"
description = "Type-safe abstractions for interacting with Neo smart contracts"

version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
documentation.workspace = true
repository.workspace = true
homepage.workspace = true
categories.workspace = true
keywords.workspace = true
exclude.workspace = true

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[package.metadata.playground]
all-features = true

[dependencies]
neo-providers = { workspace = true, optional = true }

#serde_json = "1.0.107"
serde.workspace = true
serde_json.workspace = true
futures-util.workspace = true
pin-project.workspace = true
thiserror.workspace = true
once_cell.workspace = true
hex.workspace = true
async-trait = "0.1.73"
primitive-types.workspace = true
neo-types.workspace = true
neo-crypto.workspace = true
futures = "0.3.28"
reqwest = "0.11.22"
num_enum = "0.7.0"
rustc-serialize = "0.3.24"
getset.workspace = true
p256.workspace = true
num-bigint = "0.4.4"
num-traits = "0.2.16"

[dev-dependencies]
neo-providers = { workspace = true, features = ["ws"] }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tokio = { workspace = true, features = ["macros", "rt-multi-thread"] }

[features]
default = ["providers"]
providers = ["neo-providers"]
legacy = []
openssl=[]
rustls=[]
abigen=[]
